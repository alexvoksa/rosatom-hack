#!/usr/bin/env bash
set -e
psql -v ON_ERROR_STOP=1 -U "$PGUSER" -d "$PGDATABASE" <<-EOSQL
  CREATE USER $DB_USER WITH LOGIN PASSWORD '$DB_PASS';
  CREATE DATABASE $DB_NAME;
  GRANT ALL PRIVILEGES ON DATABASE $DB_NAME TO $DB_USER;
  \connect $DB_NAME $DB_USER
  BEGIN;
  CREATE TABLE IF NOT EXISTS suppliers (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    name varchar unique not null,
    email varchar,
    phone varchar,
    inn int not null,
    kpp int not null,
    description varchar not null,
    reputation int not null default 0,
    sold_amount float not null default 0.0,
    successful_tenders int not null default 0,
    unsuccessful_tenders int not null default 0,
    is_innovate boolean not null default false,
    CONSTRAINT suppliers_uc UNIQUE (name, inn, kpp)
  );
  CREATE TABLE IF NOT EXISTS customers (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    name varchar unique not null,
    email varchar,
    phone varchar,
    inn int not null,
    kpp int not null,
    description varchar not null,
    reputation int not null default 0,
    ordered_amount float not null default 0.0,
    successful_tenders int not null default 0,
    unsuccessful_tenders int not null default 0,
    CONSTRAINT customers_uc UNIQUE (name, inn, kpp)
  );
  CREATE TABLE IF NOT EXISTS goods (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    name varchar unique not null,
    code float not null,
    price float not null,
    currency varchar (3) not null,
    description varchar not null,
    CONSTRAINT goods_uc UNIQUE (name, code)
  );
  CREATE TABLE IF NOT EXISTS tenders (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    name varchar not null,
    tender_goods varchar not null,
    tender_suppliers int,
    resolution int not null,
    winner int,
    CONSTRAINT supplier_fk
     FOREIGN KEY(winner)
       REFERENCES suppliers(id)
         ON DELETE SET NULL
         ON UPDATE CASCADE
  );

  CREATE TABLE IF NOT EXISTS tender_goods (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    tender_id int not null,
    goods_id int not null,
    CONSTRAINT tender_id_fk
      FOREIGN KEY(tender_id)
        REFERENCES tenders(id)
          ON DELETE SET NULL
          ON UPDATE CASCADE,
    CONSTRAINT goods_id_fk
      FOREIGN KEY(goods_id)
        REFERENCES goods(id)
          ON DELETE SET NULL
          ON UPDATE CASCADE
  );

  CREATE TABLE IF NOT EXISTS supplier_goods (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    supplier_id int not null,
    goods_id int not null,
    goods_amount float not null,
    CONSTRAINT goods_id_supplier_goods_fk
      FOREIGN KEY(goods_id)
        REFERENCES goods(id)
          ON DELETE SET NULL
          ON UPDATE CASCADE,
    CONSTRAINT supplier_id_supplier_goods_fk
      FOREIGN KEY(supplier_id)
        REFERENCES suppliers(id)
          ON DELETE SET NULL
          ON UPDATE CASCADE
  );
   CREATE TABLE IF NOT EXISTS customer_goods (
    id int unique not null GENERATED BY DEFAULT AS IDENTITY (START WITH 1 INCREMENT BY 1) PRIMARY KEY,
    customer_id int not null,
    goods_id int not null,
    goods_amount float not null,
    CONSTRAINT goods_id_customer_goods_fk
      FOREIGN KEY(goods_id)
        REFERENCES goods(id)
          ON DELETE SET NULL
          ON UPDATE CASCADE,
    CONSTRAINT customer_id_customer_goods_fk
      FOREIGN KEY(customer_id)
        REFERENCES customers(id)
          ON DELETE SET NULL
          ON UPDATE CASCADE
  );
  COMMIT;
EOSQL